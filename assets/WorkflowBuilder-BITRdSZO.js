import{j as e,s as i,C as t}from"./main-BLCuaw_u.js";import{H as s,I as o,P as n,C as a}from"./cloudnew00-BRG2N0xO.js";import{L as r}from"./router-D5YkJdUk.js";import"./vendor-DholdlZV.js";import"./ui-BeLtu-UY.js";const l=()=>e.jsxs("div",{children:[e.jsx(s,{header:"Workflow Builder",description:"A visual editor for designing voice bot dialogues with no-code. MVP version.",imageSrc:"/assets/builder01-DcMLbxsW.webp"}),e.jsx("div",{style:{height:64}}),e.jsx("div",{style:{color:"rgba(255, 255, 255, 0.7)",fontFamily:"Inter",fontSize:32,fontStyle:"normal",fontWeight:500,lineHeight:"normal"},children:"Brief"}),e.jsx("div",{style:{height:8}}),e.jsx("div",{style:{color:"#FFFFFF",fontFamily:"Inter",fontSize:18,fontStyle:"normal",fontWeight:400,lineHeight:"24px"},children:"A visual editor for designing voice-bot call flows - enabling users to build complex, branching conversation scripts between a voice robot and a human using a no-code interface."}),e.jsx("div",{style:{height:64}}),e.jsx("div",{style:{color:"rgba(255, 255, 255, 0.7)",fontFamily:"Inter",fontSize:32,fontStyle:"normal",fontWeight:500,lineHeight:"normal"},children:"Overview"}),e.jsx("div",{style:{height:8}}),e.jsx("div",{style:{color:"#FFFFFF",fontFamily:"Inter",fontSize:18,fontStyle:"normal",fontWeight:400,lineHeight:"24px"},children:e.jsxs("p",{children:["The product was created as part of a larger"," ",e.jsx(r,{to:"/voice-call-automation-platform",style:{color:"#4BA1FF",textDecoration:"underline",cursor:"pointer"},children:"Voice Call Automation Platform"}),". Its goal was to simplify the process of scripting conversations by providing a clear, intuitive graphical tool that could support advanced logic like loops, fallback conditions, microservice actions, and dynamic response handling â€” without the need to write code."]})}),e.jsx("div",{style:{height:64}}),e.jsx(o,{header:"Why was the project created?",description:"Previously, scripting voicebot conversations required technical expertise and manual editing of complex logic trees, making the process slow, error-prone, and inaccessible to non-developers. The business needed a visual, no-code interface to empower product managers and business users to design, test, and iterate on conversation flows quickly-reducing development bottlenecks and enabling faster go-to-market for new voice automation scenarios.",pics:["/assets/builder02-DM4Y9ErJ.webp"]}),e.jsx("div",{style:{height:64}}),e.jsx("div",{style:{color:"#FFFFFF",fontFamily:"Inter",fontSize:32,fontStyle:"normal",fontWeight:500,lineHeight:"normal"},children:"We introduced 4 main features: Modular node system, Loop logic and fallback handling, Integrated audio library and Microservice & SMS actions."}),e.jsx("div",{style:{height:80}}),e.jsxs("div",{style:{padding:"0 48px"},children:[e.jsx("div",{style:{height:64}}),e.jsx(o,{header:"01 Modular node system",description:e.jsx("p",{children:"The editor uses a modular system of nodes, each representing a specific action or decision point in the conversation flow. Each node type has a clear visual representation and unique role in the scenario logic, making it easy to understand and combine them into complex dialogues."}),pics:["/assets/builder03-D0YiIQqg.webp"]}),e.jsx("div",{style:{height:64}}),e.jsx(o,{header:"02 Loop logic and fallback handling",description:e.jsx("p",{children:"One of the key innovations was the introduction of loop logic - allowing scenarios to repeat sections with configurable limits and exit conditions. This enabled more natural conversations where the bot could retry failed interactions or offer alternative paths based on user responses."}),pics:["/assets/Loop%20logic-1-H0FuMuon.webp","/assets/Loop%20logic-2-DekzyJIk.webp"]}),e.jsx("div",{style:{height:64}}),e.jsx(o,{header:"03 Integrated audio library",description:e.jsx("p",{children:"The builder includes a comprehensive audio management system where users can upload, organize and assign voice responses to each node. The system supports multiple audio variants per response, with automatic fallback options to maintain natural conversation flow."}),pics:["/assets/Bot-01-R0abbLFN.webp","/assets/Bot-02-D5jRZyD8.webp","/assets/Bot-03-1AZt1tI_.webp","/assets/Bot-04-CO6Q3DjN.webp"]}),e.jsx("div",{style:{height:64}}),e.jsx(o,{header:"04 Microservice & SMS actions",description:e.jsx("p",{children:"Beyond conversation logic, the builder supports integration with external systems through microservice calls and SMS actions. Users can configure these nodes to trigger specific actions, handle responses, and automatically route the conversation based on success/failure conditions."}),pics:["/assets/Microservice-01-DWTvyInO.webp","/assets/Microservice-02-DSJzIiEU.webp"]}),e.jsx("div",{style:{height:64}}),e.jsx(o,{header:"03 Dig in",description:e.jsxs("div",{children:[e.jsx("span",{children:"The design challenge was to balance a powerful system of logic with visual clarity. I started by mapping out typical scenarios with real users from support and QA teams, then transformed those into simplified building blocks."}),e.jsx("div",{style:{height:12}}),e.jsx("span",{children:"We tested prototypes with internal users, refined UX around node linking, added contextual hints, and ensured every node displayed the most relevant content (e.g., main audio transcript)."}),e.jsx("div",{style:{height:12}}),e.jsx("span",{children:"To support error prevention, the editor includes live validation (e.g., cycles must have repeat limits, all paths must terminate) and system warnings when required elements are missing."})]}),pics:["/assets/Composition-1-4OPWCYpC.webp","/assets/Composition-2-DUf9HsGx.webp"]}),e.jsx("div",{style:{height:64}}),e.jsx("div",{style:{height:64}}),e.jsx("div",{style:{height:64}}),e.jsx("div",{style:{alignSelf:"stretch",color:"rgba(255, 255, 255, 0.7)",fontFamily:"Inter",fontSize:32,fontStyle:"normal",fontWeight:500,lineHeight:"normal"},children:"Result"}),e.jsx("div",{style:{height:8}}),e.jsxs("div",{style:{width:"100%",color:"#FFFFFF",fontFamily:"Inter",fontSize:18,fontStyle:"normal",fontWeight:400,lineHeight:"24px"},children:[e.jsx("span",{children:"The Workflow Builder drastically reduced the onboarding time for new users and allowed non-technical staff to design and test complex scenarios independently."}),e.jsx("div",{style:{height:12}}),e.jsx("span",{children:"The MVP version is currently being tested by real users in production-like environments. Early feedback confirms the tool significantly reduces scenario setup time and lowers the entry barrier for non-technical users. A full public release is planned after the testing phase is complete."})]})]}),e.jsx("div",{style:{height:56}}),e.jsx("div",{style:{flex:"1 0 0",color:"#FFFFFF",fontFamily:"Inter",fontSize:32,fontStyle:"normal",fontWeight:500,lineHeight:"normal"},children:"See also"}),e.jsx("div",{style:{height:40}}),e.jsxs("div",{className:i.ProjectsContent,children:[e.jsx(t,{url:"/voice-call-automation-platform",title:"Voice Call Automation Platform",description:"A no-code platform for designing and managing automated voice call campaigns.",tags:["Product","B2B","2025-present"],pics:[n],size:"M"}),e.jsx(t,{title:"Console for a Cloud Monitoring Solution",url:"https://prickle-gambler-f05.notion.site/Console-for-a-Cloud-Monitoring-Solution-19d15a43f1a64bfdba61f617ecb80e40",description:"Cloud version of the VictoriaMetrics monitoring solution and time series database hosted on AWS.",tags:["B2B","Cloud","2023-24"],pics:[a],size:"M"})]}),e.jsx("div",{style:{height:80}})]});export{l as default};
